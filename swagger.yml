openapi: 3.0.1
info:
  title: Oscar API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://TODO/v1
tags:
- name: profile
  description: Individual profile updates and display 
- name: moods
  description: Individual mood capture and results
paths:
  /profile:
    put:
      tags:
      - profile
      summary: Update the logged in users profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Profile updated
          content: {}
      security:
      - oscar_auth:
        - write:profile
        - write:moods
    post:
      tags:
      - profile
      summary: Create a profile for a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        201:
          description: Profile created
          content: {}
        405:
          description: Profile already created
          content: {}
      security:
      - oscar_auth:
        - write:profile
        - write:moods
    get:
      tags:
      - profile
      summary: Get the logged in users profile
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
      - oscar_auth:
        - read:profile
        - read:moods
  /moods:
    put:
      tags:
      - moods
      summary: Update the logged in users mood for today
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mood'
        required: true
      responses:
        200:
          description: Mood updated
          content: {}
      security:
      - oscar_auth:
        - write:moods
    post:
      tags:
      - moods
      summary: Add a mood for today for the logged in user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mood'
        required: true
      responses:
        201:
          description: Mood created
          content: {}
        405:
          description: Mood already created for today
          content: {}
      security:
      - oscar_auth:
        - write:moods
    get:
      tags:
      - moods
      summary: List all previously recorded moods for the logged in user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mood'
      security:
      - oscar_auth:
        - read:moods
components:
  schemas:
    Profile:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserProfile'
        mood:
          $ref: '#/components/schemas/MoodProfile'
        activity:
          $ref: '#/components/schemas/ActivityProfile'
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        age:
          type: integer
    ActivityProfile:
      type: object
      properties:
        suggestedActivities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        favouriteActivities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    MoodProfile:
      type: object
      properties:
        latestMood:
          $ref: '#/components/schemas/Mood'
        moodHistory:
          type: array
          items:
            $ref: '#/components/schemas/Mood'
    Activity:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    Feeling:
      type: object
      properties:
        value:
          type: integer
          example: 5
        description:
          type: string
          example: Meh, Ok
    Mood:
      type: object
      properties:
        physical:
          $ref: '#/components/schemas/Feeling'
        mental:
          $ref: '#/components/schemas/Feeling'
        timestamp:
          type: string
          format: date-time
  securitySchemes:
    oscar_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://TODO/oauth/dialog
          scopes:
            write:moods: modify moods in your account
            read:moods: read your moods
    api_key:
      type: apiKey
      name: api_key
      in: header
